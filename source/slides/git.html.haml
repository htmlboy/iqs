---
title: Git, GitHub & Netlify
layout: layout-slides
---

%section
  %h1 Git, GitHub & Netlify
%section
  %p.note
    Developers usually work with centralised code repositories and version
    control software. These code repositories allow developers to work together
    in the same project and create parallel code versions.
  %p.note
    The most popular version control software is
    <a href="https://git-scm.com/" target="_blank">Git</a>.
%section
  %p.note
    Git has code versions known as <i>branches</i>. The main branch or most stable
    version of the code is called <code>master</code>.
  %p.note
    Software developers will normally create a copy of this branch as a new branch,
    apply some changes or create a new functionality, and once this new branch is
    stable, merge it to the <code>master</code> branch.

%section
  %p.note
    In Git, changes have different states: they might be in the <code>master</code>
    branch or on a new branch; and they might be just in developer's computer, or
    also uploaded to the version control server.

%section
  %p.note
    The most popular version control server service is called
    <a href="https://github.com">GitHub</a>, and you can create an account for free.
  %p.note
    Git interaction and GitHub syncing usually relly on the Terminal or Command
    Prompt apps; but the easiest way to start working with these tools is with a
    Graphical User Interface app like
    <a href="https://desktop.github.com/" target="_blank">GitHub Desktop</a>.

%section
  %h3 Steps for a new repository
  %ol.note
    %li Enter your GitHub account and click on ˝New˝.
    %li Add a name (no spaces or special characters).
    %li Set it as Public (if you want other users to check it out) or Private.
    %li Click on ˝Create repository˝.
    %li Access the new repository, click on ˝Clone or download˝ and select ˝Open in Desktop˝.
    %li Select the Local Path where the repository will be stored in your computer.

%section
  %h3 Steps for adding changes (<code>master</code> branch)
  %ol.note
    %li Open your local version of the repository in the code editor.
    %li Create changes and save them.
    %li In GitHub Desktop, create a Commit (changes package) with a Summary of the changes.