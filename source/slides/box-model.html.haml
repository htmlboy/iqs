---
title: Box model
layout: layout-slides
---

%section
  %h1 Box model

%section
  %div(style="display: flex; align-items: center; margin: auto;")
    %div(style="width: 100%")
      %span(style="font-size: .75em; color: white;")
        ← width →
      %div(style="background-color: hotpink; color: white; height: 200px; display: flex; flex-direction: column; justify-content: center;")
        %span(style="font-size: .75em; color: white;")
          ↑
          %br
          height
          %br
          ↓
  %p
    All HTML elements are box-shaped. This box has a <code>width</code> and a <code>height</code>.

%section
  %span(style="font-size: .5em;")
    margin
  %div(style="width: 50%; border: 2px dashed; background-color: hotpink; color: white; margin: auto; padding: .1em;")
    %span(style="font-size: .5em; top: -.4em; position: relative;")
      padding
    %div(style="min-height: 100px; display: flex; align-items: center; justify-content: center; background-color: rgba(255,255,255,.1); margin: 0 1em;")
      Content
    %span(style="font-size: .5em; top: -.4em; position: relative;")
      padding
  %span(style="font-size: .5em; top: -1em; position: relative;")
    margin
  %p
    These boxes have content, space between the content and the border
    (<code>padding</code>) and space between the border and other boxes (<code>margin</code>).

%section
  .codepen(data-height="350" data-theme-id="0" data-slug-hash="qJKMjo" data-default-tab="css,result" data-user="htmlboy")
  %p.note
    The <code>width</code> and <code>height</code> properties are used to set
    the width and height. If we don't set a width, block-type tags tend to be
    100% width, and line-type tags depend on their content. If we don't set a
    height, the box gets the height of the content.

%section
  %pre
    %code
      :preserve
        .example{
          min-width: 200px;
          max-width: 90%;
          min-height: 200px;
          max-height: 1200px;
        }
  %p
    Apart from setting a <code>width</code> or a <code>height</code>, we can also
    give minimum or maximum widths or heights.
%section
  .codepen(data-height="350" data-editable="true" data-theme-id="0" data-slug-hash="XxYPZe" data-default-tab="css,result" data-user="htmlboy")

  %p
    We can give a different value of <code>margin</code> on each side of the box.

%section
  %pre
    %code
      :preserve
        .example{
          margin: 20px;
        }
  %p
    Or the same margin for all 4 sides.

%section
  %pre
    %code
      :preserve
        .example{
          margin: 20px 10px 30px 15px;
        }
  %p
    The <code>margin</code> property is an abbreviated property, which supports
    up to 4 values separated by spaces.

%section
  .codepen(data-height="350" data-editable="true" data-theme-id="0" data-slug-hash="EdReEo" data-default-tab="css,result" data-user="htmlboy")

  %p
    The <code>padding</code> property follows rules similar to <code>margin</code>.

%section
  %pre
    %code
      :preserve
        *{
          box-sizing: border-box;
        }
  %p.note
    To prevent <code>padding</code> and <code>border</code> from changing the
    total width that we have marked with the <code>width</code> property, we can
    change the box model at the beginning of our CSS, for all the elements.