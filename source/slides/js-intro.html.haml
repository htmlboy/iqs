---
title: Introduction to JavaScript
layout: layout-slides
---

%section
  %h1 Introduction to JavaScript

%section
  %h2 JavaScript is a<br>programming language
  %p
    It's used to program behaviour: ˝when the user clicks here, something happens˝.
%section
  %h2 Goals
  %ul
    %li Access the content of a web page
    %li Modify the content of a web page
    %li Program rules
    %li React to events
%section
  %h2 Example
  %p
    ˝If I click…˝
  %p
    ˝on an element with the 'example' class…˝
  %p
    ˝…add or remove the 'active' class.˝

%section
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="JLRqbJ" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")

%section
  %h2 Usage: basics

%section
  %h3 The script tag
  %p A JavaScript file can be added to a website using the script tag before the body's closing tag:
  %pre
    %code
      :preserve
          &lt;script src="path/to/file.js"&gt;&lt;/script&gt;
        &lt;/body&gt;

%section
  %h3 Script order
  %p
    JS files are executed in order of appearance, therefore you should load
    external libraries (i.e. <a href="https://jquery.com" target="_blank">jQuery</a>)
    before loading dependent files.

%section
  %h3 The console
  %p
    The console can be found under the console tab in the browser's inspector.
    It allows us to debug our code. It can be used with the <code>console.log()</code>
    method to print messages and values.

%section
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="YzzMYNe" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")

%section
  %h2 Usage: syntax

%section
  %h3 Writing
  %p
    JavaScript is case sensitive; consistency is key when writing variables,
    functions, etc. Dashes are not tipically used to name variables or properties
    (since - is also the substraction symbol). Instead of using dashes, compound
    words are usually written in camel case (each word in the middle of the
    phrase begins with a capital letter). Example: <code>variableName</code>.

%section
  %h3 Quotation marks
  %p
    Javascript uses quotation marks to enclose values that shouldn't be directly
    interpreted (usually text values). Double ("") or single ('') quotation marks
    can be equally used, but they should be used alternately if they are nested.
    Example:
  %pre
    %code
      :preserve
        "this is a 'quoted text'"

%section
  %h3 Parenthesis
  %p
    JavaScript functions typically have one or more arguments (interpreted values)
    between parenthesis. The name of the function is written next to the parenthesis,
    without an space between them. Multiple arguments are separated by commas.
    Example:
  %pre
    %code
      :preserve
        console.log("Hola");

%section
  %h3 Dots
  %p
    Dots indicate belonging, usually to an object. For example, <code>console.log()</code>
    calls the <code>log()</code> function, which belongs to the <code>console</code> object.

%section
  %h3 Semicolons & curly brackets
  %p
    Similarly to CSS, instructions typically end with a <code>;</code> indicating
    that the next thing is a different instruction. Again similarly to CSS,
    several instructions can be grouped inside curly brackets <code>{}</code>
    and use them to link them to other elements, ie functions.

%section
  %h3 Comments in JS
  %p
    Block comments are written with <code>/* */</code>, for example:

  %pre
    %code
      :preserve
        /* text inside a comment */
  %p
    Inline comments are written with <code>//</code> at the start of the line,
    for example:
  %pre
    %code
      :preserve
        // Commented line

%section
  %img.clean(src="js-intro-content/logo-jquery.png" alt="jQuery")
  %p
    jQuery is a JavaScript library with a lot of pre-made helper functions to
    speed up the writing process.
  %p
    It's quite common between <i>plugins</i> like galleries and modal boxes.
%section
  %p
    If we use jQuery, we should download it from
    <a href="http://jquery.com" target="_blank">jQuery.com</a> and reference it
    before our own JS file.
  %pre
    %code
      :preserve
          &lt;script src="jquery.js"&gt;&lt;/script&gt;
          &lt;script src="myscripts.js"&gt;&lt;/script&gt;
        &lt;/body&gt;
%section
  %p Example of a jQuery-based script
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="WzoGGz" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")
